# C:\Dropbox\Public\html5\PS1\ErGuard.ps1 Build: 7 2016-06-12T20:47:01  Copyright Gilgamech Technologies 
# Update Path: C:\Dropbox\C:\Dropbox\Public\html5\PS1\ErGuard.ps1
# Build : LineNo : Update Notes
# 3 : 15 : [array]$err = $error[0].tostring__.split_"`n"_
# 4 : 16 : $err
# 5 : 14 : $ErrOutput = new_object System.Object | select_object "ErrFileName","ErrLine","ErrChar","ErrMessage","ErrResolution"
# 6 : 9 : Get_Error
# 7 : 24 :  if _$ErrOutput.Message _like "*parameter*"_ _   $ResolveLine = $ErrOutput.Text + ","  _; #end if ErrOutput.Message
$ErGuard = 'C:\Dropbox\Public\html5\PS1\ErGuard.ps1'
Write-Host -f green "$ErGuard build: $((gc $ErGuard)[0].split(' ')[3] )"


Function Get-Error {
	
	$ErrOutput = new-object System.Object | select-object "FileName","Line","Char","Message","Resolution","Text"
	
	[array]$ErrTxt = $error[0].tostring().split("`n")
	$ErrOutput.FileName = $ErrTxt[0].split(" :")[1] + ":" + $ErrTxt[0].split(" :")[2]
	$ErrOutput.Line = $ErrTxt[0].split(" :")[3]
	$ErrOutput.Char = $ErrTxt[0].split(" :")[5]
	$ErrOutput.Message = $ErrTxt[3]
	$ErrOutput.Resolution = $ErrTxt[3].split("'")[1]
	$ErrOutput.Text = (gc $ErrOutput.FileName)[$ErrOutput.Line - 1]
	$ErrOutput
	if ($ErrOutput.Message -like "*parameter*") {
		$ResolveLine = $ErrOutput.Text + ","
	}; #end if ErrOutput.Message
	
}; #end Get-Error




#Get-Error

